<!-- Views/Order/Edit.cshtml -->
@model ABCRetails.Models.Order
@{
    ViewData["Title"] = "Edit Order";
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h2><i class="fas fa-edit"></i> Edit Order</h2>

<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit" method="post" id="orderEditForm">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="CustomerId" />
            <input type="hidden" asp-for="ProductId" />
            <input type="hidden" asp-for="UnitPrice" />
            <input type="hidden" asp-for="TotalPrice" />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Customer</label>
                        <input type="text" class="form-control" value="@Model.Username" readonly />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Product</label>
                        <input type="text" class="form-control" value="@Model.ProductName" readonly />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="OrderDate" class="form-label"></label>
                        <input asp-for="OrderDate" class="form-control" type="date" />
                        <span asp-validation-for="OrderDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="Quantity" class="form-label"></label>
                        <input asp-for="Quantity" class="form-control" type="number" min="1" readonly />
                        <div class="form-text">Quantity cannot be changed after order creation</div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Unit Price</label>
                        <input type="text" class="form-control" value="@Model.UnitPrice.ToString("C")" readonly />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Total Price</label>
                        <input type="text" class="form-control" value="@Model.TotalPrice.ToString("C")" readonly />
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Status" class="form-label"></label>

                @if (Model.Status == "Completed" || Model.Status == "Cancelled")
                {
                    <input type="text" class="form-control" value="@Model.Status" readonly />
                    <input type="hidden" asp-for="Status" />
                }
                else
                {

                    <select asp-for="Status" class="form-select">
                        <option value="Pending">Pending</option>
                        <option value="Processing">Processing</option>
                        <option value="Completed">Completed</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                }

                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Update Order
                </button>
                <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-info">
                    <i class="fas fa-eye"></i> View Details
                </a>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-times"></i> Cancel
                </a>
            </div>
        </form>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">Order Summary</h6>
            </div>
            <div class="card-body">
                <p>
                    <strong>Order ID:</strong><br />
                    <small class="text-muted">@Model.Id</small>
                </p>

                <p>
                    <strong>Current Status:</strong><br />
                    <span class="badge bg-@(GetStatusBadgeClass(Model.Status))">@Model.Status</span>
                </p>
            </div>
        </div>
    </div>
</div>

@{

    string GetStatusBadgeClass(string status) => status?.ToLowerInvariant() switch
    {
        "submitted" => "primary",
        "processing" => "info",
        "completed" => "success",
        "cancelled" => "danger",
        _ => "secondary"
    };
}


@section Scripts {
    <script>
        document.getElementById('orderEditForm').addEventListener('submit', function (e) {
            // Remove this if you had preventDefault() in other scripts
            // e.preventDefault();

            // Just log for debugging
            console.log("Submitting orderEditForm...");

            // Let it submit naturally
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}
